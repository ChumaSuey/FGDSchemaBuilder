/*
  Theme Variables
  We use CSS variables to make theme switching easy.
*/

/* Default (Light) Theme */
:root {
  --bg-color: #f4f4f9;
  --panel-bg-color: #ffffff;
  --text-color: #333333;
  --header-text-color: #333333;
  --header-bg-color: #e9e9ef;
  --border-color: #dddddd;
  --button-bg-color: #007bff;
  --button-text-color: #ffffff;
  --button-hover-bg-color: #0056b3;
  --selected-item-bg: #cce5ff;
  --placeholder-text-color: #6c757d;
  --button-danger-bg-color: #dc3545;
  --button-danger-hover-bg-color: #c82333;
  --input-bg-color: #fff;
  --input-border-color: #ccc;
  --input-text-color: #333;
  --code-bg-color: #f8f8f8;
  --code-text-color: #333;
}

/* Dark Theme */
.dark {
  --bg-color: #121212;
  --panel-bg-color: #1e1e1e;
  --text-color: #f5f5f5;
  --header-text-color: #dcdcdc; /* Softer white for headers */
  --header-bg-color: #2a2a2a;
  --border-color: #444444;
  --button-bg-color: #0d6efd;
  --button-text-color: #ffffff;
  --button-hover-bg-color: #0b5ed7;
  --selected-item-bg: #003366;
  --placeholder-text-color: #9e9e9e; /* Muted gray for placeholder text */
  --button-danger-bg-color: #d32f2f;
  --button-danger-hover-bg-color: #b71c1c;
  --input-bg-color: #333;
  --input-border-color: #555;
  --input-text-color: #f5f5f5;
  --code-bg-color: #282c34;
  --code-text-color: #abb2bf;
}

/*
  Apply variables to your elements.
  This is an example of how you would apply them.
  You should integrate these into your existing styles.
*/
body {
  background-color: var(--bg-color);
  color: var(--text-color);
  transition: background-color 0.2s, color 0.2s;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
}

.app-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.main-layout {
  display: grid;
  grid-template-columns: 400px 1fr 1fr;
  flex-grow: 1;
  overflow: hidden;
}

.panel, .fgd-preview-panel, .entity-list-panel, .entity-editor, .property-list {
  background-color: var(--panel-bg-color);
  border-color: var(--border-color);
  padding: 1rem;
  overflow-y: auto;
}

.panel-list {
  display: flex;
  flex-direction: column;
  padding: 0; /* Remove padding for the control section */
}

.app-header, .entity-list-header, .entity-editor-header, .fgd-preview-header, .property-list-header {
  background-color: var(--header-bg-color);
  border-bottom: 1px solid var(--border-color);
  padding: 0.5rem 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-weight: bold;
  color: var(--header-text-color);
}

.app-actions {
  display: flex;
  gap: 0.75rem;
}

button {
  background-color: var(--button-bg-color);
  color: var(--button-text-color);
  border: 1px solid transparent;
  padding: 0.5rem 1rem;
  cursor: pointer;
  border-radius: 4px;
}

button:hover {
  background-color: var(--button-hover-bg-color);
}

button.drag-mode-active {
  background-color: #28a745; /* A green color to indicate 'On' */
  border-color: #28a745;
}

input, textarea, select {
  background-color: var(--input-bg-color);
  border: 1px solid var(--input-border-color);
  color: var(--input-text-color);
  padding: 0.5rem;
  border-radius: 4px;
  width: 100%;
  box-sizing: border-box;
}

label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: bold;
  color: var(--text-color);
}

.entity-list-container.drag-mode-enabled .entity-list-item {
  cursor: grab;
}

.draggable-item-wrapper {
  /* This wrapper is necessary for dnd-kit transforms */
  touch-action: none; /* Improve touch compatibility */
}

.entity-list-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  margin-bottom: 0.5rem;
  cursor: pointer;
  transition: background-color 0.2s;
  color: var(--header-text-color); /* Use the softer text color for list items */
}

/* This targets the text/label part of the list item to prevent it from overflowing */
.entity-list-item > :first-child {
    flex-grow: 1;
    /* Allow text to wrap and break to ensure full readability */
    word-break: break-word;
}

/* Style for the small delete button inside a list item */
.entity-list-item button {
    padding: 0.1rem 0.6rem;
    font-size: 1rem;
    line-height: 1.5;
    background-color: var(--button-danger-bg-color);
    flex-shrink: 0; /* Prevent button from shrinking */
}

.entity-list-item:hover {
  background-color: var(--header-bg-color);
}

.entity-list-item.selected {
  background-color: var(--selected-item-bg);
}

.draggable-item-wrapper.is-dragging .entity-list-item {
  background-color: var(--selected-item-bg);
  box-shadow: 0 4px 8px rgba(0,0,0,0.3);
  /* Optional: slightly lift the item */
  transform: scale(1.02);
}

.entity-list-container.drag-mode-enabled {
  /* A visual cue that the area is ready for dropping */
  outline: 2px dashed var(--button-bg-color);
  outline-offset: 4px;
  border-radius: 4px;
}

.entity-list-item button:hover {
    background-color: var(--button-danger-hover-bg-color);
}

.fgd-output {
  background-color: var(--code-bg-color);
  color: var(--code-text-color);
  padding: 1rem;
  border-radius: 4px;
  white-space: pre-wrap;
  word-wrap: break-word;
}

.entity-editor-placeholder {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  text-align: center;
  color: var(--placeholder-text-color);
}

/* === PropertyList & PropertyEditor Styles === */

.property-list {
  margin-top: 1.5rem;
  border-top: 1px solid var(--border-color);
  padding-top: 1.5rem;
}

.properties-container {
  margin-top: 1rem;
}

.no-properties-message {
  color: var(--placeholder-text-color);
  text-align: center;
  padding-top: 1rem;
  font-style: italic;
}

.property-row {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  padding: 1rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  margin-bottom: 1rem;
  background-color: var(--bg-color);
}

.property-editor-wrapper {
  flex-grow: 1;
}

.property-editor {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 1rem;
  align-items: start;
}

.property-details {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.property-details-full {
  grid-column: 1 / -1; /* Span all columns */
}

.type-specific-editor {
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px dashed var(--border-color);
  grid-column: 1 / -1;
}

.choices-list {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.choice-row {
  display: grid;
  grid-template-columns: 1fr 2fr auto;
  gap: 0.5rem;
  align-items: center;
}

.choice-input {
  padding: 0.4rem;
}

.delete-choice-btn {
  padding: 0.1rem 0.6rem;
  font-size: 1.2rem;
  line-height: 1.5;
  background-color: var(--button-danger-bg-color);
  color: var(--button-text-color);
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
}

.delete-choice-btn:hover {
  background-color: var(--button-danger-hover-bg-color);
}

.add-choice-btn {
  padding: 0.4rem 0.8rem;
  font-size: 0.9em;
}

.delete-property-btn {
  padding: 0.1rem 0.6rem;
  font-size: 1rem;
  line-height: 1.5;
  background-color: var(--button-danger-bg-color);
  color: var(--button-text-color);
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  flex-shrink: 0;
}

.delete-property-btn:hover {
  background-color: var(--button-danger-hover-bg-color);
}

/* Styles for specific input types in PropertyEditor */
.flags-container {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.flag-option {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.flag-option input[type="checkbox"] {
  width: auto; /* override default width: 100% */
}

.flag-option label {
  margin-bottom: 0; /* override default label margin */
  font-weight: normal;
}

/* === Entity List Filtering & Badges === */

.entity-list-controls {
    padding: 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    border-bottom: 1px solid var(--border-color);
    background-color: var(--header-bg-color); /* Match header for controls area */
    flex-shrink: 0;
}

@media (min-width: 768px) {
    .entity-list-controls {
        flex-direction: row;
    }
}

.entity-list-container {
    overflow-y: auto;
    flex-grow: 1;
    padding: 0.5rem; /* Add padding back just for the list part */
}

.entity-name {
    flex-grow: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-right: 8px;
}

.entity-type-badge {
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 0.7rem;
    font-weight: 600;
    line-height: 1.2;
    color: #fff;
    flex-shrink: 0;
    text-transform: capitalize;
}

/* Color coding for different entity types */
.type-pointclass { background-color: #4a90e2; } /* Blue */
.type-solidclass { background-color: #f5a623; } /* Orange */
.type-baseclass { background-color: #7ed321; }  /* Green */
.type-filterclass { background-color: #bd10e0; } /* Purple */
.type-npcclass { background-color: #d0021b; }    /* Red */
.type-keyframeclass, .type-moveclass { background-color: #49c4c4; } /* Teal */

.no-entities-message {
    padding: 20px;
    text-align: center;
    color: var(--placeholder-text-color);
}